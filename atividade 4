#include <stdio.h> // Atividade 4 (se eu transformasse de decimal para binario, o exercicio seria mais tranquio...)
int main(){
    char ch;
    int a, b, result, r = 0, sub[20];
    long binario1, binario2;
    int i = 0 ;
    int remainder = 0, sum[20];
    
    printf("Enter an Operator (+, -, *, /): ");
    scanf("%c", &ch);
    printf("Informe o primeiro binario: ");
    scanf("%ld", &binario1);
    printf("Informe o segundo binario: ");
    scanf("%ld", &binario2);
    
    switch(ch){
        case '+':
                while (binario1 != 0 || binario2 != 0)
                {
                    sum[i++] =(binario1 % 10 + binario2 % 10 + remainder) % 2;
                    remainder =(binario1 % 10 + binario2 % 10 + remainder) / 2;
                    binario1 = binario1 / 10;
                    binario2 = binario2 / 10;
                }
                if (remainder != 0)
                    sum[i++] = remainder;
                --i;
                printf("Soma dos binarios: ");
                while (i >= 0)
                    printf("%d", sum[i--]);
            
            break;
        
        case '-':
            while (binario1 != 0 || binario2 != 0)
            {
                sub[i] = (binario1 % 10 - binario2 % 10 + r) % 2; 
                r = (binario1 % 10 - binario2 % 10 + r) / 2;
                
                while(sub[i - 1] < 0)
                {
                    sub[i-1] += 2;
                    sub[i]--;
                }
                
                binario1 = binario1 / 10;
                binario2 = binario2 / 10;
                i++; 
            }
            if (r != 0)
                sub[i++] = r;
            --i;
            
            while (i >= 1 && sub[i] == 0)
                i--;
            
               printf("Difference: ");
            while (i >= 0)
                result=sub["%d",i--];
                printf (" --> ");

            
            break;
        
        case '*':
        // mesmo com essa programaçao, eu nao fui capaz de incluir na programaçao principal
        /* int binaryProduct(int binNum1, int binNum2) //PRODUTO BINARIO
        {
            int i = 0;
            int rem = 0;
            int product = 0;
            int sum[20] = { 0 };
        
            while (binNum1 != 0 || binNum2 != 0) {
        
                sum[i] = (binNum1 % 10 + binNum2 % 10 + rem) % 2;
                rem = (binNum1 % 10 + binNum2 % 10 + rem) / 2;
        
                binNum1 = binNum1 / 10;
                binNum2 = binNum2 / 10;
        
                i = i + 1;
            }
        
            if (rem != 0)
                sum[i] = rem;
        
            while (i >= 0) {
                product = product * 10 + sum[i];
                i = i - 1;
            }
        
            return product;
        }
        
        int main()
        {
            long binNum1 = 0;
            long binNum2 = 0;
            long product = 0;
        
            int digit = 0;
            int factor = 1;
        
            printf("Enter Number1: ");
            scanf("%ld", &binNum1);
        
            printf("Enter Number2: ");
            scanf("%ld", &binNum2);
        
            while (binNum2 != 0) {
                digit = binNum2 % 10;
        
                if (digit == 1) {
                    binNum1 = binNum1 * factor;
                    product = binaryProduct(binNum1, product);
                }
                else {
                    binNum1 = binNum1 * factor;
                }
        
                binNum2 = binNum2 / 10;
                factor = 10;
            }
        
            printf("Product of numbers: %ld", product);
        
            return 0;
            } */

        
            break;
            
        case '/':
        // mesmo com essa programaçao, eu nao fui capaz de incluir na programaçao principal, aqui eu precisava de 
        /* int main()
            {
            int i=0,j,decimal=0,decimal2=0,pow=1;
            int dividend,divisor,rem,quocient;
            int bnum[50],brem[50],remainder;
            printf("enter dividend number in binary: ");
            scanf ("%d",&dividend);
            printf("enter divisor number in binary: ");
            scanf("%d",&divisor);
            while (dividend!=0){
                rem=dividend%10;
                for(j=0;j<i;j++){
                    pow=pow*2;
                    
                }
                decimal=decimal+(rem*pow);
                pow=1;
                dividend=dividend/10;
                i++;
            }
            i=0;
            while (divisor!=0){
                rem=divisor%10;
                for(j=0;j<1;j++){
                    pow=pow*2;
                }
                decimal2=decimal2+(rem*pow);
                pow=1;
                divisor=divisor/10;
                i++;
            }
            i=0;
            quocient=decimal/decimal2;
            remainder=decimal%decimal2;
            
            printf("quocient in decimal is %d\n",quocient);
            printf("remainder in decimal is %d\n",remainder);
            if(quocient==0){
                bnum[0]=0;
                i++;
                goto con;
            }
            while(quocient!=0){
                bnum[1]=(quocient%2);
                quocient=quocient/2;
                i++;
            }
            con:
            printf("quocient in binary = ");
            for(j=i-1;j>=0;j--){
                printf("%d",bnum[j]);
            }
            i=0;
            printf("\n");
            if(remainder==0){
                brem[0]=0;
                i++;
                goto com;
            }
            while (remainder!=0){
                brem[i]=(remainder%2);
                remainder=remainder/2;
                i++;
            }
            com:
            printf("remainder in binary = ");
            for(j=i-1;j>=0;j--){
                printf("%d",brem[j]);
            }
            return 0; 
            
        }*/
            break;
    }
    
    return 0;
}
